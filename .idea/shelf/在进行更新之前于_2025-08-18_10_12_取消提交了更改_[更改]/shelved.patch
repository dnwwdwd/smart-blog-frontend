Index: src/api/articleController.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/api/articleController.ts b/src/api/articleController.ts
new file mode 100644
--- /dev/null	(date 1754902331145)
+++ b/src/api/articleController.ts	(date 1754902331145)
@@ -0,0 +1,91 @@
+// @ts-ignore
+/* eslint-disable */
+import request from "@/libs/request";
+
+/** 此处后端没有提供注释 POST /article/column/get/vo/${param0} */
+export async function getArticlePageByColumnId(
+  // 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
+  params: API.getArticlePageByColumnIdParams,
+  body: API.ArticleRequest,
+  options?: { [key: string]: any }
+) {
+  const { columnId: param0, ...queryParams } = params;
+  return request<API.BaseResponsePageArticleVo>(
+    `/article/column/get/vo/${param0}`,
+    {
+      method: "POST",
+      headers: {
+        "Content-Type": "application/json",
+      },
+      params: { ...queryParams },
+      data: body,
+      ...(options || {}),
+    }
+  );
+}
+
+/** 此处后端没有提供注释 GET /article/get/vo/${param0} */
+export async function getArticleVoById(
+  // 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
+  params: API.getArticleVoByIdParams,
+  options?: { [key: string]: any }
+) {
+  const { articleId: param0, ...queryParams } = params;
+  return request<API.BaseResponseArticleVo>(`/article/get/vo/${param0}`, {
+    method: "GET",
+    params: { ...queryParams },
+    ...(options || {}),
+  });
+}
+
+/** 此处后端没有提供注释 POST /article/page */
+export async function getArticlePage(
+  body: API.ArticleRequest,
+  options?: { [key: string]: any }
+) {
+  return request<API.BaseResponsePageArticleVo>("/article/page", {
+    method: "POST",
+    headers: {
+      "Content-Type": "application/json",
+    },
+    data: body,
+    ...(options || {}),
+  });
+}
+
+/** 此处后端没有提供注释 POST /article/publish */
+export async function publishArticle(
+  body: API.ArticlePublishRequest,
+  options?: { [key: string]: any }
+) {
+  return request<API.BaseResponseVoid>("/article/publish", {
+    method: "POST",
+    headers: {
+      "Content-Type": "application/json",
+    },
+    data: body,
+    ...(options || {}),
+  });
+}
+
+/** 此处后端没有提供注释 POST /article/tag/get/vo/${param0} */
+export async function getArticlePageByTagId(
+  // 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
+  params: API.getArticlePageByTagIdParams,
+  body: API.ArticleRequest,
+  options?: { [key: string]: any }
+) {
+  const { tagId: param0, ...queryParams } = params;
+  return request<API.BaseResponsePageArticleVo>(
+    `/article/tag/get/vo/${param0}`,
+    {
+      method: "POST",
+      headers: {
+        "Content-Type": "application/json",
+      },
+      params: { ...queryParams },
+      data: body,
+      ...(options || {}),
+    }
+  );
+}
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
--- /dev/null	(date 1754891252517)
+++ b/.idea/modules.xml	(date 1754891252517)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/smart-blog-frontend.iml" filepath="$PROJECT_DIR$/.idea/smart-blog-frontend.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: src/api/commentController.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/api/commentController.ts b/src/api/commentController.ts
new file mode 100644
--- /dev/null	(date 1754902331100)
+++ b/src/api/commentController.ts	(date 1754902331100)
@@ -0,0 +1,32 @@
+// @ts-ignore
+/* eslint-disable */
+import request from "@/libs/request";
+
+/** 此处后端没有提供注释 GET /comment/get/${param0} */
+export async function getComment(
+  // 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
+  params: API.getCommentParams,
+  options?: { [key: string]: any }
+) {
+  const { articleId: param0, ...queryParams } = params;
+  return request<API.BaseResponseListComment>(`/comment/get/${param0}`, {
+    method: "GET",
+    params: { ...queryParams },
+    ...(options || {}),
+  });
+}
+
+/** 此处后端没有提供注释 POST /comment/submit */
+export async function submitComment(
+  body: API.CommentSubmitDto,
+  options?: { [key: string]: any }
+) {
+  return request<API.BaseResponseVoid>("/comment/submit", {
+    method: "POST",
+    headers: {
+      "Content-Type": "application/json",
+    },
+    data: body,
+    ...(options || {}),
+  });
+}
Index: src/api/columnController.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/api/columnController.ts b/src/api/columnController.ts
new file mode 100644
--- /dev/null	(date 1754902331117)
+++ b/src/api/columnController.ts	(date 1754902331117)
@@ -0,0 +1,32 @@
+// @ts-ignore
+/* eslint-disable */
+import request from "@/libs/request";
+
+/** 此处后端没有提供注释 GET /column/get/${param0} */
+export async function getColumnById(
+  // 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
+  params: API.getColumnByIdParams,
+  options?: { [key: string]: any }
+) {
+  const { columnId: param0, ...queryParams } = params;
+  return request<API.BaseResponseColumnVo>(`/column/get/${param0}`, {
+    method: "GET",
+    params: { ...queryParams },
+    ...(options || {}),
+  });
+}
+
+/** 此处后端没有提供注释 POST /column/page */
+export async function getColumnPage(
+  body: API.ColumnRequest,
+  options?: { [key: string]: any }
+) {
+  return request<API.BaseResponsePageColumnVo>("/column/page", {
+    method: "POST",
+    headers: {
+      "Content-Type": "application/json",
+    },
+    data: body,
+    ...(options || {}),
+  });
+}
Index: src/api/tagController.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/api/tagController.ts b/src/api/tagController.ts
new file mode 100644
--- /dev/null	(date 1754902331169)
+++ b/src/api/tagController.ts	(date 1754902331169)
@@ -0,0 +1,34 @@
+// @ts-ignore
+/* eslint-disable */
+import request from "@/libs/request";
+
+/** 此处后端没有提供注释 GET /tag/get/vo/${param0} */
+export async function getTag(
+  // 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
+  params: API.getTagParams,
+  options?: { [key: string]: any }
+) {
+  const { tagId: param0, ...queryParams } = params;
+  return request<API.BaseResponseTagVo>(`/tag/get/vo/${param0}`, {
+    method: "GET",
+    params: { ...queryParams },
+    ...(options || {}),
+  });
+}
+
+/** 此处后端没有提供注释 GET /tag/page */
+export async function getTagPage(
+  // 叠加生成的Param类型 (非body参数swagger默认没有生成对象)
+  params: API.getTagPageParams,
+  options?: { [key: string]: any }
+) {
+  return request<API.BaseResponsePageTagVo>("/tag/page", {
+    method: "GET",
+    params: {
+      ...params,
+      request: undefined,
+      ...params["request"],
+    },
+    ...(options || {}),
+  });
+}
Index: src/api/index.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/api/index.ts b/src/api/index.ts
new file mode 100644
--- /dev/null	(date 1754902331178)
+++ b/src/api/index.ts	(date 1754902331178)
@@ -0,0 +1,16 @@
+// @ts-ignore
+/* eslint-disable */
+// API 更新时间：
+// API 唯一标识：
+import * as userController from "./userController";
+import * as commentController from "./commentController";
+import * as columnController from "./columnController";
+import * as articleController from "./articleController";
+import * as tagController from "./tagController";
+export default {
+  userController,
+  commentController,
+  columnController,
+  articleController,
+  tagController,
+};
Index: src/api/userController.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/api/userController.ts b/src/api/userController.ts
new file mode 100644
--- /dev/null	(date 1754902331079)
+++ b/src/api/userController.ts	(date 1754902331079)
@@ -0,0 +1,34 @@
+// @ts-ignore
+/* eslint-disable */
+import request from "@/libs/request";
+
+/** 此处后端没有提供注释 GET /user/get/login */
+export async function getLoginUser(options?: { [key: string]: any }) {
+  return request<API.BaseResponseLoginUserVO>("/user/get/login", {
+    method: "GET",
+    ...(options || {}),
+  });
+}
+
+/** 此处后端没有提供注释 POST /user/login */
+export async function userLogin(
+  body: API.UserLoginRequest,
+  options?: { [key: string]: any }
+) {
+  return request<API.BaseResponseLoginUserVO>("/user/login", {
+    method: "POST",
+    headers: {
+      "Content-Type": "application/json",
+    },
+    data: body,
+    ...(options || {}),
+  });
+}
+
+/** 此处后端没有提供注释 POST /user/logout */
+export async function userLogout(options?: { [key: string]: any }) {
+  return request<API.BaseResponseBoolean>("/user/logout", {
+    method: "POST",
+    ...(options || {}),
+  });
+}
Index: .idea/smart-blog-frontend.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/smart-blog-frontend.iml b/.idea/smart-blog-frontend.iml
new file mode 100644
--- /dev/null	(date 1754891252450)
+++ b/.idea/smart-blog-frontend.iml	(date 1754891252450)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="WEB_MODULE" version="4">
+  <component name="NewModuleRootManager">
+    <content url="file://$MODULE_DIR$">
+      <excludeFolder url="file://$MODULE_DIR$/.tmp" />
+      <excludeFolder url="file://$MODULE_DIR$/temp" />
+      <excludeFolder url="file://$MODULE_DIR$/tmp" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: src/api/typings.d.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/api/typings.d.ts b/src/api/typings.d.ts
new file mode 100644
--- /dev/null	(date 1754902331029)
+++ b/src/api/typings.d.ts	(date 1754902331029)
@@ -0,0 +1,285 @@
+declare namespace API {
+  type Article = {
+    id?: number;
+    title?: string;
+    content?: string;
+    excerpt?: string;
+    coverImage?: string;
+    status?: number;
+    readTime?: number;
+    views?: number;
+    seoTitle?: string;
+    seoDescription?: string;
+    seoKeywords?: string;
+    publishedTime?: string;
+    createTime?: string;
+    updateTime?: string;
+  };
+
+  type ArticlePublishRequest = {
+    current?: number;
+    pageSize?: number;
+    sortField?: string;
+    sortOrder?: string;
+    title?: string;
+    content?: string;
+    excerpt?: string;
+    coverImage?: string;
+    seoTitle?: string;
+    seoDescription?: string;
+    seoKeywords?: string;
+    tags?: string[];
+    columnIds?: number[];
+  };
+
+  type ArticleRequest = {
+    current?: number;
+    pageSize?: number;
+    sortField?: string;
+    sortOrder?: string;
+    title?: string;
+  };
+
+  type ArticleVo = {
+    id?: number;
+    title?: string;
+    content?: string;
+    excerpt?: string;
+    coverImage?: string;
+    status?: number;
+    readTime?: number;
+    views?: number;
+    seoTitle?: string;
+    seoDescription?: string;
+    seoKeywords?: string[];
+    tags?: string[];
+    comments?: Comment[];
+    columns?: Column[];
+    publishedTime?: string;
+    createTime?: string;
+    updateTime?: string;
+  };
+
+  type BaseResponseArticleVo = {
+    code?: number;
+    data?: ArticleVo;
+    message?: string;
+  };
+
+  type BaseResponseBoolean = {
+    code?: number;
+    data?: boolean;
+    message?: string;
+  };
+
+  type BaseResponseColumnVo = {
+    code?: number;
+    data?: ColumnVo;
+    message?: string;
+  };
+
+  type BaseResponseListComment = {
+    code?: number;
+    data?: Comment[];
+    message?: string;
+  };
+
+  type BaseResponseLoginUserVO = {
+    code?: number;
+    data?: LoginUserVO;
+    message?: string;
+  };
+
+  type BaseResponsePageArticleVo = {
+    code?: number;
+    data?: PageArticleVo;
+    message?: string;
+  };
+
+  type BaseResponsePageColumnVo = {
+    code?: number;
+    data?: PageColumnVo;
+    message?: string;
+  };
+
+  type BaseResponsePageTagVo = {
+    code?: number;
+    data?: PageTagVo;
+    message?: string;
+  };
+
+  type BaseResponseTagVo = {
+    code?: number;
+    data?: TagVo;
+    message?: string;
+  };
+
+  type BaseResponseVoid = {
+    code?: number;
+    data?: Record<string, any>;
+    message?: string;
+  };
+
+  type Column = {
+    id?: number;
+    name?: string;
+    description?: string;
+    coverImage?: string;
+    categoryId?: number;
+    createTime?: string;
+    updateTime?: string;
+  };
+
+  type ColumnRequest = {
+    current?: number;
+    pageSize?: number;
+    sortField?: string;
+    sortOrder?: string;
+    columnName?: string;
+  };
+
+  type ColumnVo = {
+    id?: number;
+    name?: string;
+    description?: string;
+    coverImage?: string;
+    categoryId?: number;
+    createTime?: string;
+    updateTime?: string;
+    articles?: Article[];
+    articleCount?: number;
+  };
+
+  type Comment = {
+    id?: number;
+    articleId?: number;
+    parentId?: number;
+    nickname?: string;
+    userEmail?: string;
+    userWebsite?: string;
+    userAvatar?: string;
+    content?: string;
+    ipAddress?: Record<string, any>;
+    userAgent?: string;
+    createTime?: string;
+    updateTime?: string;
+  };
+
+  type CommentSubmitDto = {
+    articleId: number;
+    parentId?: number;
+    nickname: string;
+    userEmail: string;
+    content: string;
+    userWebsite?: string;
+  };
+
+  type getArticlePageByColumnIdParams = {
+    columnId: number;
+  };
+
+  type getArticlePageByTagIdParams = {
+    tagId: number;
+  };
+
+  type getArticleVoByIdParams = {
+    articleId: number;
+  };
+
+  type getColumnByIdParams = {
+    columnId: number;
+  };
+
+  type getCommentParams = {
+    articleId: number;
+  };
+
+  type getTagPageParams = {
+    request: TagRequest;
+  };
+
+  type getTagParams = {
+    tagId: number;
+  };
+
+  type LoginUserVO = {
+    id?: number;
+    username?: string;
+    userAvatar?: string;
+    token?: string;
+    userRole?: string;
+    createTime?: string;
+    updateTime?: string;
+  };
+
+  type OrderItem = {
+    column?: string;
+    asc?: boolean;
+  };
+
+  type PageArticleVo = {
+    records?: ArticleVo[];
+    total?: number;
+    size?: number;
+    current?: number;
+    orders?: OrderItem[];
+    optimizeCountSql?: PageArticleVo;
+    searchCount?: PageArticleVo;
+    optimizeJoinOfCountSql?: boolean;
+    maxLimit?: number;
+    countId?: string;
+    pages?: number;
+  };
+
+  type PageColumnVo = {
+    records?: ColumnVo[];
+    total?: number;
+    size?: number;
+    current?: number;
+    orders?: OrderItem[];
+    optimizeCountSql?: PageColumnVo;
+    searchCount?: PageColumnVo;
+    optimizeJoinOfCountSql?: boolean;
+    maxLimit?: number;
+    countId?: string;
+    pages?: number;
+  };
+
+  type PageTagVo = {
+    records?: TagVo[];
+    total?: number;
+    size?: number;
+    current?: number;
+    orders?: OrderItem[];
+    optimizeCountSql?: PageTagVo;
+    searchCount?: PageTagVo;
+    optimizeJoinOfCountSql?: boolean;
+    maxLimit?: number;
+    countId?: string;
+    pages?: number;
+  };
+
+  type TagRequest = {
+    current?: number;
+    pageSize?: number;
+    sortField?: string;
+    sortOrder?: string;
+    tagName?: string;
+  };
+
+  type TagVo = {
+    id?: number;
+    name?: string;
+    description?: string;
+    color?: string;
+    createTime?: string;
+    updateTime?: string;
+    articles?: Article[];
+    articleCount?: number;
+  };
+
+  type UserLoginRequest = {
+    userAccount: string;
+    userPassword: string;
+  };
+}
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"5bbedd87-77e4-4b9e-8dcb-f82810a3040f\" name=\"更改\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/openapi.config.ts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/openapi.config.ts\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/package-lock.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/package-lock.json\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/package.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/package.json\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/api/api/articleController.ts\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/api/api/columnController.ts\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/api/api/index.ts\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/api/api/tagController.ts\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/api/api/typings.d.ts\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/api/api/userController.ts\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/app/article/[articleId]/page.tsx\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/app/article/[articleId]/page.tsx\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/app/articles/page.tsx\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/app/articles/page.tsx\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/app/articles/styles.css\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/app/articles/styles.css\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/app/column/[columnId]/page.tsx\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/app/column/[columnId]/page.tsx\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/app/columns/page.tsx\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/app/columns/page.tsx\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/app/columns/styles.css\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/app/columns/styles.css\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/app/layout.tsx\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/app/layout.tsx\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/app/link/[linkId]/page.tsx\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/app/link/[linkId]/page.tsx\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/app/links/styles.css\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/app/links/styles.css\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/app/tags/page.tsx\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/app/tags/page.tsx\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/app/tags/styles.css\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/app/tags/styles.css\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/components/ArticleList/page.tsx\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/components/ArticleList/page.tsx\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/components/ColumnCard/page.tsx\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/components/ColumnCard/page.tsx\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/components/TagCard/page.tsx\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/components/TagCard/page.tsx\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/components/TagCard/styles.css\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/components/TagCard/styles.css\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/libs/request.ts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/libs/request.ts\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/utils/index.ts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/utils/index.ts\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 2\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"312PPw1gPKDhXnNB0Yl3ddrxPxz\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;/Users/hejiajun/Documents/study/projects/smart-blog/smart-blog-frontend/public/assets&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.standard&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.standard&quot;: &quot;&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;npm.dev.executor&quot;: &quot;Run&quot;,\r\n    &quot;npm.openapi.executor&quot;: &quot;Run&quot;,\r\n    &quot;prettierjs.PrettierConfiguration.Package&quot;: &quot;D:\\\\hejiajun\\\\smart-blog-frontend\\\\node_modules\\\\prettier&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;settings.javascript.prettier&quot;,\r\n    &quot;ts.external.directory.path&quot;: &quot;D:\\\\hejiajun\\\\smart-blog-frontend\\\\node_modules\\\\typescript\\\\lib&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"$PROJECT_DIR$/public/assets\" />\r\n      <recent name=\"$PROJECT_DIR$/src/layouts/BasicLayout\" />\r\n      <recent name=\"$PROJECT_DIR$/config\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"$PROJECT_DIR$\" />\r\n      <recent name=\"$PROJECT_DIR$/src/layouts/BasicLayout/components\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"npm.dev\">\r\n    <configuration name=\"dev\" type=\"js.build_tools.npm\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <package-json value=\"$PROJECT_DIR$/package.json\" />\r\n      <command value=\"run\" />\r\n      <scripts>\r\n        <script value=\"dev\" />\r\n      </scripts>\r\n      <node-interpreter value=\"project\" />\r\n      <envs />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"openapi\" type=\"js.build_tools.npm\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <package-json value=\"$PROJECT_DIR$/package.json\" />\r\n      <command value=\"run\" />\r\n      <scripts>\r\n        <script value=\"openapi\" />\r\n      </scripts>\r\n      <node-interpreter value=\"project\" />\r\n      <envs />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"npm.dev\" />\r\n        <item itemvalue=\"npm.openapi\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-5c90d61e3bab-JavaScript-WS-242.23726.96\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"应用程序级\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"默认任务\">\r\n      <changelist id=\"5bbedd87-77e4-4b9e-8dcb-f82810a3040f\" name=\"更改\" comment=\"\" />\r\n      <created>1754719174455</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1754719174455</updated>\r\n      <workItem from=\"1754719175711\" duration=\"1844000\" />\r\n      <workItem from=\"1754721031736\" duration=\"730000\" />\r\n      <workItem from=\"1754722232122\" duration=\"32331000\" />\r\n      <workItem from=\"1754891250059\" duration=\"11329000\" />\r\n      <workItem from=\"1755246914105\" duration=\"444000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision f65c5982d88b8a8163e58f84bb6bf32775ab7b92)
+++ b/.idea/workspace.xml	(date 1755482954193)
@@ -4,35 +4,8 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="5bbedd87-77e4-4b9e-8dcb-f82810a3040f" name="更改" comment="">
-      <change beforePath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" beforeDir="false" />
+    <list default="true" id="5bbedd87-77e4-4b9e-8dcb-f82810a3040f" name="更改" comment="feat: develop tag page, docker backend interfaces, optimize the tag component">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/openapi.config.ts" beforeDir="false" afterPath="$PROJECT_DIR$/openapi.config.ts" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/package-lock.json" beforeDir="false" afterPath="$PROJECT_DIR$/package-lock.json" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/package.json" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/api/api/articleController.ts" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/api/api/columnController.ts" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/api/api/index.ts" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/api/api/tagController.ts" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/api/api/typings.d.ts" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/api/api/userController.ts" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/app/article/[articleId]/page.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/app/article/[articleId]/page.tsx" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/app/articles/page.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/app/articles/page.tsx" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/app/articles/styles.css" beforeDir="false" afterPath="$PROJECT_DIR$/src/app/articles/styles.css" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/app/column/[columnId]/page.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/app/column/[columnId]/page.tsx" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/app/columns/page.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/app/columns/page.tsx" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/app/columns/styles.css" beforeDir="false" afterPath="$PROJECT_DIR$/src/app/columns/styles.css" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/app/layout.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/app/layout.tsx" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/app/link/[linkId]/page.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/app/link/[linkId]/page.tsx" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/app/links/styles.css" beforeDir="false" afterPath="$PROJECT_DIR$/src/app/links/styles.css" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/app/tags/page.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/app/tags/page.tsx" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/app/tags/styles.css" beforeDir="false" afterPath="$PROJECT_DIR$/src/app/tags/styles.css" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/components/ArticleList/page.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/ArticleList/page.tsx" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/components/ColumnCard/page.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/ColumnCard/page.tsx" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/components/TagCard/page.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/TagCard/page.tsx" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/components/TagCard/styles.css" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/TagCard/styles.css" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/libs/request.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/libs/request.ts" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/utils/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/utils/index.ts" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -134,8 +107,17 @@
       <workItem from="1754721031736" duration="730000" />
       <workItem from="1754722232122" duration="32331000" />
       <workItem from="1754891250059" duration="11329000" />
-      <workItem from="1755246914105" duration="444000" />
+      <workItem from="1755246914105" duration="931000" />
+    </task>
+    <task id="LOCAL-00001" summary="feat: develop tag page, docker backend interfaces, optimize the tag component">
+      <option name="closed" value="true" />
+      <created>1755247617482</created>
+      <option name="number" value="00001" />
+      <option name="presentableId" value="LOCAL-00001" />
+      <option name="project" value="LOCAL" />
+      <updated>1755247617482</updated>
     </task>
+    <option name="localTasksCounter" value="2" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -152,4 +134,8 @@
       </map>
     </option>
   </component>
+  <component name="VcsManagerConfiguration">
+    <MESSAGE value="feat: develop tag page, docker backend interfaces, optimize the tag component" />
+    <option name="LAST_COMMIT_MESSAGE" value="feat: develop tag page, docker backend interfaces, optimize the tag component" />
+  </component>
 </project>
\ No newline at end of file
